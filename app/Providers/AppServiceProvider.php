<?php

declare(strict_types=1);

namespace App\Providers;

use App\Models\Customer;
use App\Models\Hub;
use App\Models\Partner;
use App\Models\Staff;
use App\Models\Station;
use App\Models\User;
use Domain\CustomerFacing\Actions\Auth\Read\GetCustomerAccountForLoginContract;
use Domain\CustomerFacing\Actions\Auth\Read\Implementations\GetCustomerAccountForLogin;
use Domain\CustomerFacing\Actions\Auth\Write\Implementations\RegisterNewCustomerAccount;
use Domain\CustomerFacing\Actions\Auth\Write\RegisterNewCustomerAccountContract;
use Domain\CustomerFacing\Actions\Notification\Read\GetNotificationContract as CustomerGetNotificationContract;
use Domain\CustomerFacing\Actions\Notification\Read\Implementations\GetNotification as CustomerGetNotification;
use Domain\CustomerFacing\Actions\Order\Read\GetOrderDetailContract;
use Domain\CustomerFacing\Actions\Order\Read\GetOrderListContract;
use Domain\CustomerFacing\Actions\Order\Read\GetOrderPaymentsContract;
use Domain\CustomerFacing\Actions\Order\Read\GetOrderPaymentStatusContract;
use Domain\CustomerFacing\Actions\Order\Read\Implementations\GetOrderDetail;
use Domain\CustomerFacing\Actions\Order\Read\Implementations\GetOrderList;
use Domain\CustomerFacing\Actions\Order\Read\Implementations\GetOrderPayments;
use Domain\CustomerFacing\Actions\Order\Read\Implementations\GetOrderPaymentStatus;
use Domain\CustomerFacing\Actions\Order\Read\Implementations\SearchRoute;
use Domain\CustomerFacing\Actions\Order\Read\Implementations\TrackingOrder;
use Domain\CustomerFacing\Actions\Order\Read\SearchRouteContract;
use Domain\CustomerFacing\Actions\Order\Read\TrackingOrderContract;
use Domain\CustomerFacing\Actions\Order\Write\CancelOrderContract;
use Domain\CustomerFacing\Actions\Order\Write\CreateOrderContract;
use Domain\CustomerFacing\Actions\Order\Write\Implementations\CancelOrder;
use Domain\CustomerFacing\Actions\Order\Write\Implementations\CreateOrder;
use Domain\CustomerFacing\Actions\Order\Write\Implementations\UpdateOrder;
use Domain\CustomerFacing\Actions\Order\Write\UpdateOrderContract;
use Domain\CustomerFacing\Actions\Partner\Read\GetPartnerContract;
use Domain\CustomerFacing\Actions\Partner\Read\GetPartnerDetailContract;
use Domain\CustomerFacing\Actions\Partner\Read\Implementations\GetPartner;
use Domain\CustomerFacing\Actions\Partner\Read\Implementations\GetPartnerDetail;
use Domain\CustomerFacing\Actions\Payment\Read\GetPaymentHistoryContract;
use Domain\CustomerFacing\Actions\Payment\Read\GetPaymentUrlContract;
use Domain\CustomerFacing\Actions\Payment\Read\Implementations\GetPaymentHistory;
use Domain\CustomerFacing\Actions\Payment\Read\Implementations\GetPaymentUrl;
use Domain\CustomerFacing\Actions\Payment\Write\Implementations\ProceedPayment;
use Domain\CustomerFacing\Actions\Payment\Write\ProceedPaymentContract;
use Domain\CustomerFacing\Actions\Price\Read\GetBoxSizeContract;
use Domain\CustomerFacing\Actions\Price\Read\GetPackagePriceContract;
use Domain\CustomerFacing\Actions\Price\Read\GetPriceContract;
use Domain\CustomerFacing\Actions\Price\Read\Implementations\GetBoxSize;
use Domain\CustomerFacing\Actions\Price\Read\Implementations\GetPackagePrice;
use Domain\CustomerFacing\Actions\Price\Read\Implementations\GetPrice;
use Domain\CustomerFacing\Actions\Profile\Write\Implementations\UpdateProfile as CustomerUpdateProfile;
use Domain\CustomerFacing\Actions\Profile\Write\UpdateProfileContract as CustomerUpdateProfileContract;
use Domain\Internal\Actions\Account\Read\GetCustomerAccountContract;
use Domain\Internal\Actions\Account\Read\GetPartnerAccountContract;
use Domain\Internal\Actions\Account\Read\GetStaffAccountContract;
use Domain\Internal\Actions\Account\Read\Implementations\GetCustomerAccount;
use Domain\Internal\Actions\Account\Read\Implementations\GetPartnerAccount;
use Domain\Internal\Actions\Account\Read\Implementations\GetStaffAccount;
use Domain\Internal\Actions\Account\Write\CreatePartnerAccountContract as StaffCreatePartnerAccountContract;
use Domain\Internal\Actions\Account\Write\CreateStaffAccountContract as StaffCreateStaffAccountContract;
use Domain\Internal\Actions\Account\Write\Implementations\CreatePartnerAccount as StaffCreatePartnerAccount;
use Domain\Internal\Actions\Account\Write\Implementations\CreateStaffAccount as StaffCreateStaffAccount;
use Domain\Internal\Actions\Account\Write\Implementations\UpdatePartnerAccountStatus;
use Domain\Internal\Actions\Account\Write\Implementations\UpdateStaffAccountStatus;
use Domain\Internal\Actions\Account\Write\UpdatePartnerAccountStatusContract;
use Domain\Internal\Actions\Account\Write\UpdateStaffAccountStatusContract;
use Domain\Internal\Actions\Auth\Read\GetStaffAccountForLoginContract;
use Domain\Internal\Actions\Auth\Read\Implementations\GetStaffAccountForLogin;
use Domain\Internal\Actions\Balance\Read\GetCustomerDirectPaymentStatisticsContract;
use Domain\Internal\Actions\Balance\Read\GetOrderRevenueStatisticsContract;
use Domain\Internal\Actions\Balance\Read\GetPartnerAccountBalanceStatisticsContract;
use Domain\Internal\Actions\Balance\Read\GetPartnerTopUpStatisticsContract;
use Domain\Internal\Actions\Balance\Read\GetPartnerWithdrawStatisticsContract;
use Domain\Internal\Actions\Balance\Read\GetPaymentListContract;
use Domain\Internal\Actions\Balance\Read\GetTransactionListContract;
use Domain\Internal\Actions\Balance\Read\Implementations\GetCustomerDirectPaymentStatistics;
use Domain\Internal\Actions\Balance\Read\Implementations\GetOrderRevenueStatistics;
use Domain\Internal\Actions\Balance\Read\Implementations\GetPartnerAccountBalanceStatistics;
use Domain\Internal\Actions\Balance\Read\Implementations\GetPartnerTopUpStatistics;
use Domain\Internal\Actions\Balance\Read\Implementations\GetPartnerWithdrawStatistics;
use Domain\Internal\Actions\Balance\Read\Implementations\GetPaymentList;
use Domain\Internal\Actions\Balance\Read\Implementations\GetTransactionList;
use Domain\Internal\Actions\Hub\Read\GetHubByIdContract;
use Domain\Internal\Actions\Hub\Read\Implementations\GetHubById;
use Domain\Internal\Actions\Hub\Write\CreateHubContract;
use Domain\Internal\Actions\Hub\Write\Implementations\CreateHub;
use Domain\Internal\Actions\Order\Read\GetCancelledOrdersContract as AdminGetCancelledOrdersContract;
use Domain\Internal\Actions\Order\Read\GetDoneOrdersContract as AdminGetDoneOrdersContract;
use Domain\Internal\Actions\Order\Read\GetOrderContract;
use Domain\Internal\Actions\Order\Read\Implementations\GetCancelledOrders as AdminGetCancelledOrder;
use Domain\Internal\Actions\Order\Read\Implementations\GetDoneOrders as AdminGetDoneOrder;
use Domain\Internal\Actions\Order\Read\Implementations\GetOrder;
use Domain\Internal\Actions\Order\Write\CancelOrderContract as StaffCancelOrderContract;
use Domain\Internal\Actions\Order\Write\Implementations\CancelOrder as StaffCancelOrder;
use Domain\Internal\Actions\Order\Write\Implementations\StaffUpdateDeliveredStatus;
use Domain\Internal\Actions\Order\Write\Implementations\StaffUpdateDeliveringStatus;
use Domain\Internal\Actions\Order\Write\StaffUpdateDeliveredStatusContract;
use Domain\Internal\Actions\Order\Write\StaffUpdateDeliveringStatusContract;
use Domain\Internal\Actions\Price\Read\GetBoxSizeContract as StaffGetBoxSizeContract;
use Domain\Internal\Actions\Price\Read\GetPriceContract as StaffGetPriceContract;
use Domain\Internal\Actions\Price\Read\Implementations\GetBoxSize as StaffGetBoxSize;
use Domain\Internal\Actions\Price\Read\Implementations\GetPrice as StaffGetPrice;
use Domain\Internal\Actions\Price\Write\CreateBoxSizeContract as StaffCreateBoxSizeContract;
use Domain\Internal\Actions\Price\Write\CreatePriceContract as StaffCreatePriceContract;
use Domain\Internal\Actions\Price\Write\Implementations\CreateBoxSize as StaffCreateBoxSize;
use Domain\Internal\Actions\Price\Write\Implementations\CreatePrice as StaffCreatePrice;
use Domain\Internal\Actions\Station\Write\ApproveStationContract;
use Domain\Internal\Actions\Station\Write\DenyStationContract;
use Domain\Internal\Actions\Station\Write\Implementations\ApproveStation;
use Domain\Internal\Actions\Station\Write\Implementations\DenyStation;
use Domain\Internal\Actions\Statistics\Read\GetCancelledOrdersStatisticsContract;
use Domain\Internal\Actions\Statistics\Read\GetCustomerStatisticsContract;
use Domain\Internal\Actions\Statistics\Read\GetLostOrdersStatisticsContract;
use Domain\Internal\Actions\Statistics\Read\GetMonthlyRevenueContract;
use Domain\Internal\Actions\Statistics\Read\GetMonthRevenueContract;
use Domain\Internal\Actions\Statistics\Read\GetPartnerStatisticsContract;
use Domain\Internal\Actions\Statistics\Read\GetStatisticsOrderContract;
use Domain\Internal\Actions\Statistics\Read\GetTopPartnerContract;
use Domain\Internal\Actions\Statistics\Read\GetTopUserContract;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetCancelledOrdersStatistics;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetCustomerStatistics;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetLostOrdersStatistics;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetMonthlyRevenue;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetMonthRevenue;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetPartnerStatistics;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetStatisticsOrder;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetTopPartner;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetTopUser;
use Domain\Internal\Actions\Transaction\Read\GetTransactionRequestContract as InternalGetTransactionRequestContract;
use Domain\Internal\Actions\Transaction\Read\Implementations\GetTransactionRequest as InternalGetTransactionRequest;
use Domain\Internal\Actions\Transaction\Write\ProceedTopupTransactionContract;
use Domain\Internal\Actions\Transaction\Write\ProceedWithdrawTransactionContract;
use Domain\Partner\Actions\Auth\Read\GetPartnerAccountForLoginContract;
use Domain\Partner\Actions\Auth\Read\Implementations\GetPartnerAccountForLogin;
use Domain\Partner\Actions\Driver\Read\GetDriverContract;
use Domain\Partner\Actions\Driver\Read\Implementations\GetDriver;
use Domain\Internal\Actions\Driver\Read\GetDriverContract as StaffGetDriverContract;
use Domain\Internal\Actions\Driver\Read\Implementations\GetDriver as StaffGetDriver;
use Domain\Internal\Actions\Statistics\Read\GetYearlyRevenueStatisticsContract;
use Domain\Internal\Actions\Statistics\Read\Implementations\GetYearlyRevenueStatistics;
use Domain\Internal\Actions\Transaction\Write\Implementations\ProceedTopupTransaction;
use Domain\Internal\Actions\Transaction\Write\Implementations\ProceedWithdrawTransaction;
use Domain\Internal\Actions\Vehicle\Read\GetInComingVehicleContract;
use Domain\Partner\Actions\Driver\Write\CreateDriverContract;
use Domain\Partner\Actions\Driver\Write\DeleteDriverContract;
use Domain\Partner\Actions\Driver\Write\Implementations\CreateDriver;
use Domain\Partner\Actions\Driver\Write\Implementations\DeleteDriver;
use Domain\Partner\Actions\Driver\Write\Implementations\UpdateDriver;
use Domain\Partner\Actions\Driver\Write\Implementations\UpdateDriverAvatar;
use Domain\Partner\Actions\Driver\Write\UpdateDriverAvatarContract;
use Domain\Partner\Actions\Driver\Write\UpdateDriverContract;
use Domain\Partner\Actions\Vehicle\Read\GetVehicleContract;
use Domain\Partner\Actions\Vehicle\Read\Implementations\GetVehicle;
use Domain\Internal\Actions\Vehicle\Read\GetVehicleContract as StaffGetVehicleContract;
use Domain\Internal\Actions\Vehicle\Read\Implementations\GetInComingVehicle;
use Domain\Internal\Actions\Vehicle\Read\Implementations\GetVehicle as StaffGetVehicle;
use Domain\Partner\Actions\Vehicle\Write\CreateVehicleContract;
use Domain\Partner\Actions\Vehicle\Write\DeleteVehicleContract;
use Domain\Partner\Actions\Vehicle\Write\Implementations\CreateVehicle;
use Domain\Partner\Actions\Vehicle\Write\Implementations\DeleteVehicle;
use Domain\Partner\Actions\Vehicle\Write\Implementations\UpdateVehicle;
use Domain\Partner\Actions\Vehicle\Write\UpdateVehicleContract;
use Domain\Partner\Actions\Hub\Read\GetHubContract;
use Domain\Partner\Actions\Hub\Read\Implementations\GetHub;
use Domain\Partner\Actions\Order\Read\GetCancelledOrdersContract;
use Domain\Partner\Actions\Order\Read\GetDoneOrdersContract;
use Domain\Partner\Actions\Order\Read\GetPartnerEndingOrdersContract;
use Domain\Partner\Actions\Order\Read\GetPartnerStartingOrdersContract;
use Domain\Partner\Actions\Order\Read\GetPartnerStraightOrdersContract;
use Domain\Partner\Actions\Order\Read\Implementations\GetCancelledOrders;
use Domain\Partner\Actions\Order\Read\Implementations\GetDoneOrders;
use Domain\Partner\Actions\Order\Read\Implementations\GetPartnerEndingOrders;
use Domain\Partner\Actions\Order\Read\Implementations\GetPartnerStartingOrders;
use Domain\Partner\Actions\Order\Read\Implementations\GetPartnerStraightOrders;
use Domain\Partner\Actions\Order\Write\AcceptOrderContract;
use Domain\Partner\Actions\Order\Write\CancelOrderContract as PartnerCancelOrderContract;
use Domain\Partner\Actions\Order\Write\ConfirmOrderContract;
use Domain\Partner\Actions\Order\Write\Implementations\AcceptOrder;
use Domain\Partner\Actions\Order\Write\Implementations\CancelOrder as PartnerCancelOrder;
use Domain\Partner\Actions\Order\Write\Implementations\ConfirmOrder;
use Domain\Partner\Actions\Order\Write\Implementations\UpdateDeliveredStatus;
use Domain\Partner\Actions\Order\Write\Implementations\UpdateDeliveringStatus;
use Domain\Partner\Actions\Order\Write\Implementations\UpdateDoneStatus;
use Domain\Partner\Actions\Order\Write\UpdateDeliveredStatusContract;
use Domain\Partner\Actions\Order\Write\UpdateDeliveringStatusContract;
use Domain\Partner\Actions\Order\Write\UpdateDoneStatusContract;
use Domain\Partner\Actions\Profile\Write\DeleteProfileAvatarContract;
use Domain\Partner\Actions\Profile\Write\Implementations\DeleteProfileAvatar;
use Domain\Partner\Actions\Profile\Write\Implementations\UpdateProfile as PartnerUpdateProfile;
use Domain\Partner\Actions\Profile\Write\Implementations\UpdateProfileAvatar;
use Domain\Partner\Actions\Profile\Write\UpdateProfileAvatarContract;
use Domain\Partner\Actions\Profile\Write\UpdateProfileContract as PartnerUpdateProfileContract;
use Domain\Partner\Actions\Route\Read\GetRouteContract;
use Domain\Partner\Actions\Route\Read\Implementations\GetRoute;
use Domain\Partner\Actions\Route\Write\CreateRouteContract;
use Domain\Partner\Actions\Route\Write\Implementations\CreateRoute;
use Domain\Partner\Actions\Station\Read\GetStationContract;
use Domain\Partner\Actions\Station\Read\Implementations\GetStation;
use Domain\Partner\Actions\Station\Write\CreateStationContract;
use Domain\Partner\Actions\Station\Write\Implementations\CreateStation;
use Domain\Partner\Actions\Station\Write\Implementations\UpdateStation;
use Domain\Partner\Actions\Station\Write\UpdateStationContract;
use Domain\Partner\Actions\Statistics\Read\GetDailyRevenueContract;
use Domain\Partner\Actions\Statistics\Read\GetMonthlyRevenueContract as PartnerGetMonthlyRevenueContract;
use Domain\Partner\Actions\Statistics\Read\Implementations\GetDailyRevenue;
use Domain\Partner\Actions\Statistics\Read\Implementations\GetMonthlyRevenue as PartnerGetMonthlyRevenue;
use Domain\Partner\Actions\Transaction\Read\GetTransactionContract;
use Domain\Partner\Actions\Transaction\Read\GetTransactionRequestContract as PartnerGetTransactionRequestContract;
use Domain\Partner\Actions\Transaction\Read\Implementations\GetTransaction;
use Domain\Partner\Actions\Transaction\Read\Implementations\GetTransactionRequest as PartnerGetTransactionRequest;
use Domain\Partner\Actions\Transaction\Read\Implementations\ViewBalance;
use Domain\Partner\Actions\Transaction\Read\ViewBalanceContract;
use Domain\Partner\Actions\Transaction\Write\CancelTransactionRequestContract;
use Domain\Partner\Actions\Transaction\Write\CreateTransactionRequestContract;
use Domain\Partner\Actions\Transaction\Write\Implementations\CancelTransactionRequest;
use Domain\Partner\Actions\Transaction\Write\Implementations\CreateTransactionRequest;
use Domain\Partner\Actions\Vehicle\Write\Implementations\UpdateVehicleImage;
use Domain\Partner\Actions\Vehicle\Write\UpdateVehicleImageContract;
use Domain\Partner\Actions\Notification\Read\GetNotificationContract as PartnerGetNotificationContract;
use Domain\Partner\Actions\Notification\Read\Implementations\GetNotification as PartnerGetNotification;
use Domain\Shared\Actions\Auth\Write\CreateAccessTokenContract;
use Domain\Shared\Actions\Auth\Write\Implementations\CreateAccessToken;
use Domain\Shared\Actions\Auth\Write\Implementations\UpdatePassword;
use Domain\Shared\Actions\Auth\Write\UpdatePasswordContract;
use Domain\Shared\Actions\Order\Read\CalculatePriceContract;
use Domain\Shared\Actions\Order\Read\Implementations\CalculatePrice;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\Relation;
use Illuminate\Support\ServiceProvider;

final class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //internal
        $this->app->scoped(abstract: GetStaffAccountForLoginContract::class, concrete: GetStaffAccountForLogin::class);
        $this->app->scoped(abstract: StaffUpdateDeliveredStatusContract::class, concrete: StaffUpdateDeliveredStatus::class);
        $this->app->scoped(abstract: StaffUpdateDeliveringStatusContract::class, concrete: StaffUpdateDeliveringStatus::class);
        $this->app->scoped(abstract: StaffCreatePartnerAccountContract::class, concrete: StaffCreatePartnerAccount::class);
        $this->app->scoped(abstract: StaffCreateStaffAccountContract::class, concrete: StaffCreateStaffAccount::class);
        $this->app->scoped(abstract: StaffCreatePriceContract::class, concrete: StaffCreatePrice::class);
        $this->app->scoped(abstract: StaffCreateBoxSizeContract::class, concrete: StaffCreateBoxSize::class);
        $this->app->scoped(abstract: StaffGetBoxSizeContract::class, concrete: StaffGetBoxSize::class);
        $this->app->scoped(abstract: StaffGetPriceContract::class, concrete: StaffGetPrice::class);
        $this->app->scoped(abstract: GetStaffAccountContract::class, concrete: GetStaffAccount::class);
        $this->app->scoped(abstract: GetPartnerAccountContract::class, concrete: GetPartnerAccount::class);
        $this->app->scoped(abstract: GetCustomerAccountContract::class, concrete: GetCustomerAccount::class);
        $this->app->scoped(abstract: InternalGetTransactionRequestContract::class, concrete: InternalGetTransactionRequest::class);
        $this->app->scoped(abstract: ProceedTopupTransactionContract::class, concrete: ProceedTopupTransaction::class);
        $this->app->scoped(abstract: ProceedWithdrawTransactionContract::class, concrete: ProceedWithdrawTransaction::class);
        $this->app->scoped(abstract: GetOrderContract::class, concrete: GetOrder::class);
        $this->app->scoped(abstract: UpdatePartnerAccountStatusContract::class, concrete: UpdatePartnerAccountStatus::class);
        $this->app->scoped(abstract: UpdateStaffAccountStatusContract::class, concrete: UpdateStaffAccountStatus::class);
        $this->app->scoped(abstract: DenyStationContract::class, concrete: DenyStation::class);
        $this->app->scoped(abstract: ApproveStationContract::class, concrete: ApproveStation::class);
        $this->app->scoped(abstract: CreateHubContract::class, concrete: CreateHub::class);
        $this->app->scoped(abstract: GetHubByIdContract::class, concrete: GetHubById::class);
        $this->app->scoped(abstract: GetTopUserContract::class, concrete: GetTopUser::class);
        $this->app->scoped(abstract: GetTopPartnerContract::class, concrete: GetTopPartner::class);
        $this->app->scoped(abstract: StaffCancelOrderContract::class, concrete: StaffCancelOrder::class);
        $this->app->scoped(abstract: GetStatisticsOrderContract::class, concrete: GetStatisticsOrder::class);
        $this->app->scoped(abstract: GetPartnerStatisticsContract::class, concrete: GetPartnerStatistics::class);
        $this->app->scoped(abstract: GetCustomerStatisticsContract::class, concrete: GetCustomerStatistics::class);
        $this->app->scoped(abstract: GetLostOrdersStatisticsContract::class, concrete: GetLostOrdersStatistics::class);
        $this->app->scoped(abstract: GetCancelledOrdersStatisticsContract::class, concrete: GetCancelledOrdersStatistics::class);
        $this->app->scoped(abstract: GetMonthlyRevenueContract::class, concrete: GetMonthlyRevenue::class);
        $this->app->scoped(abstract: GetMonthRevenueContract::class, concrete: GetMonthRevenue::class);
        $this->app->scoped(abstract: GetTransactionListContract::class, concrete: GetTransactionList::class);
        $this->app->scoped(abstract: GetPaymentListContract::class, concrete: GetPaymentList::class);
        $this->app->scoped(abstract: GetPartnerTopUpStatisticsContract::class, concrete: GetPartnerTopUpStatistics::class);
        $this->app->scoped(abstract: GetPartnerWithdrawStatisticsContract::class, concrete: GetPartnerWithdrawStatistics::class);
        $this->app->scoped(abstract: GetCustomerDirectPaymentStatisticsContract::class, concrete: GetCustomerDirectPaymentStatistics::class);
        $this->app->scoped(abstract: GetPartnerAccountBalanceStatisticsContract::class, concrete: GetPartnerAccountBalanceStatistics::class);
        $this->app->scoped(abstract: GetOrderRevenueStatisticsContract::class, concrete: GetOrderRevenueStatistics::class);
        $this->app->scoped(abstract: StaffGetDriverContract::class, concrete: StaffGetDriver::class);
        $this->app->scoped(abstract: StaffGetVehicleContract::class, concrete: StaffGetVehicle::class);
        $this->app->scoped(abstract: GetInComingVehicleContract::class, concrete: GetInComingVehicle::class);
        $this->app->scoped(abstract: GetYearlyRevenueStatisticsContract::class, concrete: GetYearlyRevenueStatistics::class);

        //partner
        $this->app->scoped(abstract: GetPartnerAccountForLoginContract::class, concrete: GetPartnerAccountForLogin::class);
        $this->app->scoped(abstract: CreateStationContract::class, concrete: CreateStation::class);
        $this->app->scoped(abstract: CreateRouteContract::class, concrete: CreateRoute::class);
        $this->app->scoped(abstract: GetHubContract::class, concrete: GetHub::class);
        $this->app->scoped(abstract: GetStationContract::class, concrete: GetStation::class);
        $this->app->scoped(abstract: GetTransactionContract::class, concrete: GetTransaction::class);
        $this->app->scoped(abstract: GetPartnerStartingOrdersContract::class, concrete: GetPartnerStartingOrders::class);
        $this->app->scoped(abstract: GetPartnerEndingOrdersContract::class, concrete: GetPartnerEndingOrders::class);
        $this->app->scoped(abstract: ConfirmOrderContract::class, concrete: ConfirmOrder::class);
        $this->app->scoped(abstract: AcceptOrderContract::class, concrete: AcceptOrder::class);
        $this->app->scoped(abstract: UpdateDeliveringStatusContract::class, concrete: UpdateDeliveringStatus::class);
        $this->app->scoped(abstract: UpdateDeliveredStatusContract::class, concrete: UpdateDeliveredStatus::class);
        $this->app->scoped(abstract: UpdateDoneStatusContract::class, concrete: UpdateDoneStatus::class);
        $this->app->scoped(abstract: GetPackagePriceContract::class, concrete: GetPackagePrice::class);
        $this->app->scoped(abstract: GetRouteContract::class, concrete: GetRoute::class);
        $this->app->scoped(abstract: CreateTransactionRequestContract::class, concrete: CreateTransactionRequest::class);
        $this->app->scoped(abstract: CancelTransactionRequestContract::class, concrete: CancelTransactionRequest::class);
        $this->app->scoped(abstract: PartnerGetTransactionRequestContract::class, concrete: PartnerGetTransactionRequest::class);
        $this->app->scoped(abstract: GetPartnerStraightOrdersContract::class, concrete: GetPartnerStraightOrders::class);
        $this->app->scoped(abstract: ViewBalanceContract::class, concrete: ViewBalance::class);
        $this->app->scoped(abstract: GetDoneOrdersContract::class, concrete: GetDoneOrders::class);
        $this->app->scoped(abstract: GetCancelledOrdersContract::class, concrete: GetCancelledOrders::class);
        $this->app->scoped(abstract: AdminGetDoneOrdersContract::class, concrete: AdminGetDoneOrder::class);
        $this->app->scoped(abstract: AdminGetCancelledOrdersContract::class, concrete: AdminGetCancelledOrder::class);
        $this->app->scoped(abstract: PartnerCancelOrderContract::class, concrete: PartnerCancelOrder::class);
        $this->app->scoped(abstract: PartnerUpdateProfileContract::class, concrete: PartnerUpdateProfile::class);
        $this->app->scoped(abstract: UpdateStationContract::class, concrete: UpdateStation::class);
        $this->app->scoped(abstract: UpdateProfileAvatarContract::class, concrete: UpdateProfileAvatar::class);
        $this->app->scoped(abstract: DeleteProfileAvatarContract::class, concrete: DeleteProfileAvatar::class);
        $this->app->scoped(abstract: GetDailyRevenueContract::class, concrete: GetDailyRevenue::class);
        $this->app->scoped(abstract: PartnerGetMonthlyRevenueContract::class, concrete: PartnerGetMonthlyRevenue::class);
        $this->app->scoped(abstract: GetVehicleContract::class, concrete: GetVehicle::class);
        $this->app->scoped(abstract: UpdateVehicleContract::class, concrete: UpdateVehicle::class);
        $this->app->scoped(abstract: DeleteVehicleContract::class, concrete: DeleteVehicle::class);
        $this->app->scoped(abstract: CreateVehicleContract::class, concrete: CreateVehicle::class);
        $this->app->scoped(abstract: GetDriverContract::class, concrete: GetDriver::class);
        $this->app->scoped(abstract: UpdateDriverContract::class, concrete: UpdateDriver::class);
        $this->app->scoped(abstract: DeleteDriverContract::class, concrete: DeleteDriver::class);
        $this->app->scoped(abstract: CreateDriverContract::class, concrete: CreateDriver::class);
        $this->app->scoped(abstract: UpdateDriverAvatarContract::class, concrete: UpdateDriverAvatar::class);
        $this->app->scoped(abstract: UpdateVehicleImageContract::class, concrete: UpdateVehicleImage::class);
        $this->app->scoped(abstract: PartnerGetNotificationContract::class, concrete: PartnerGetNotification::class);
        //customer
        $this->app->scoped(abstract: RegisterNewCustomerAccountContract::class, concrete: RegisterNewCustomerAccount::class);
        $this->app->scoped(abstract: GetCustomerAccountForLoginContract::class, concrete: GetCustomerAccountForLogin::class);
        $this->app->scoped(abstract: GetBoxSizeContract::class, concrete: GetBoxSize::class);
        $this->app->scoped(abstract: CreateOrderContract::class, concrete: CreateOrder::class);
        $this->app->scoped(abstract: GetPriceContract::class, concrete: GetPrice::class);
        $this->app->scoped(abstract: TrackingOrderContract::class, concrete: TrackingOrder::class);
        $this->app->scoped(abstract: GetOrderListContract::class, concrete: GetOrderList::class);
        $this->app->scoped(abstract: GetOrderDetailContract::class, concrete: GetOrderDetail::class);
        $this->app->scoped(abstract: GetPaymentUrlContract::class, concrete: GetPaymentUrl::class);
        $this->app->scoped(abstract: ProceedPaymentContract::class, concrete: ProceedPayment::class);
        $this->app->scoped(abstract: GetOrderPaymentsContract::class, concrete: GetOrderPayments::class);
        $this->app->scoped(abstract: SearchRouteContract::class, concrete: SearchRoute::class);
        $this->app->scoped(abstract: GetOrderPaymentStatusContract::class, concrete: GetOrderPaymentStatus::class);
        $this->app->scoped(abstract: CancelOrderContract::class, concrete: CancelOrder::class);
        $this->app->scoped(abstract: CustomerUpdateProfileContract::class, concrete: CustomerUpdateProfile::class);
        $this->app->scoped(abstract: GetPaymentHistoryContract::class, concrete: GetPaymentHistory::class);
        $this->app->scoped(abstract: UpdateOrderContract::class, concrete: UpdateOrder::class);
        $this->app->scoped(abstract: GetPartnerContract::class, concrete: GetPartner::class);
        $this->app->scoped(abstract: GetPartnerDetailContract::class, concrete: GetPartnerDetail::class);
        $this->app->scoped(abstract: CustomerGetNotificationContract::class, concrete: CustomerGetNotification::class);
        //shared
        $this->app->scoped(abstract: CreateAccessTokenContract::class, concrete: CreateAccessToken::class);
        $this->app->scoped(abstract: UpdatePasswordContract::class, concrete: UpdatePassword::class);
        $this->app->scoped(abstract: CalculatePriceContract::class, concrete: CalculatePrice::class);
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        Model::shouldBeStrict( ! $this->app->isProduction());
        Model::unguard();

        Relation::enforceMorphMap([
            'user' => User::class,
            'customer' => Customer::class,
            'staff' => Staff::class,
            // 'admin' => Admin::class,
            'partner' => Partner::class,
            'hub' => Hub::class,
            'station' => Station::class,
        ]);
    }
}
